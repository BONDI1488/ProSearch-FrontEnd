{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrgrebinskij/Downloads/haraga/Kyrsova_Front/ProSearch-FrontEnd/src/pages/TestPage/TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityList = () => {\n  _s();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://api.geonames.org/searchJSON', {\n          params: {\n            q: 'Ukraine',\n            country: 'UA',\n            maxRows: 10,\n            username: 'bondi1488'\n          }\n        });\n        const cities = response.data.geonames;\n        console.log('Cities in Ukraine:', cities);\n      } catch (error) {\n        console.error('Error fetching city data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Check the console for city data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n_s(CityList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CityList;\nconst TestPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"City List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CityList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c2 = TestPage;\nexport default TestPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"CityList\");\n$RefreshReg$(_c2, \"TestPage\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","CityList","_s","fetchData","response","get","params","q","country","maxRows","username","cities","data","geonames","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","TestPage","_c2","$RefreshReg$"],"sources":["/Users/oleksandrgrebinskij/Downloads/haraga/Kyrsova_Front/ProSearch-FrontEnd/src/pages/TestPage/TestPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\n\nconst CityList: React.FC = () => {\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get(\n                    'http://api.geonames.org/searchJSON',\n                    {\n                        params: {\n                            q: 'Ukraine',\n                            country: 'UA',\n                            maxRows: 10,\n                            username: 'bondi1488',\n                        },\n                    }\n                );\n\n                const cities = response.data.geonames;\n                console.log('Cities in Ukraine:', cities);\n            } catch (error) {\n                console.error('Error fetching city data:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return <div>Check the console for city data</div>;\n};\n\nconst TestPage: React.FC = () => {\n    return (\n        <div>\n            <h1>City List</h1>\n            <CityList />\n        </div>\n    );\n};\n\nexport default TestPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7BL,SAAS,CAAC,MAAM;IACZ,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAC5B,oCAAoC,EACpC;UACIC,MAAM,EAAE;YACJC,CAAC,EAAE,SAAS;YACZC,OAAO,EAAE,IAAI;YACbC,OAAO,EAAE,EAAE;YACXC,QAAQ,EAAE;UACd;QACJ,CACJ,CAAC;QAED,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,IAAI,CAACC,QAAQ;QACrCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,MAAM,CAAC;MAC7C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDb,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOH,OAAA;IAAAiB,QAAA,EAAK;EAA+B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACrD,CAAC;AAACnB,EAAA,CA3BID,QAAkB;AAAAqB,EAAA,GAAlBrB,QAAkB;AA6BxB,MAAMsB,QAAkB,GAAGA,CAAA,KAAM;EAC7B,oBACIvB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA,CAACC,QAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAACG,GAAA,GAPID,QAAkB;AASxB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}