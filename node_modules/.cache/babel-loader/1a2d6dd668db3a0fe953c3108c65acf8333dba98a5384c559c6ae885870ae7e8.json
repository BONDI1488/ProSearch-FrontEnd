{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrgrebinskij/Downloads/haraga/Kyrsova_Front/ProSearch-FrontEnd/src/pages/TestPage/TestPage.tsx\";\nimport React, { useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPage = () => {\n  var _s = $RefreshSig$();\n  const CityList = () => {\n    _s();\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await axios.get('http://api.geonames.org/searchJSON', {\n            params: {\n              q: 'Ukraine',\n              country: 'UA',\n              maxRows: 10,\n              // Змініть це значення залежно від кількості міст, яку ви хочете вивести\n              username: 'bondi1488' // Замініть це на свій власний ключ API Geonames\n            }\n          });\n\n          const cities = response.data.geonames;\n          console.log('Cities in Ukraine:', cities);\n        } catch (error) {\n          console.error('Error fetching city data:', error);\n        }\n      };\n      fetchData();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Check the console for city data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  };\n  _s(CityList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","TestPage","_s","$RefreshSig$","CityList","fetchData","response","get","params","q","country","maxRows","username","cities","data","geonames","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oleksandrgrebinskij/Downloads/haraga/Kyrsova_Front/ProSearch-FrontEnd/src/pages/TestPage/TestPage.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport axios from \"axios\";\n\nconst TestPage = () => {\n\n    const CityList: React.FC = () => {\n        useEffect(() => {\n            const fetchData = async () => {\n                try {\n                    const response = await axios.get(\n                        'http://api.geonames.org/searchJSON',\n                        {\n                            params: {\n                                q: 'Ukraine',\n                                country: 'UA',\n                                maxRows: 10, // Змініть це значення залежно від кількості міст, яку ви хочете вивести\n                                username: 'bondi1488', // Замініть це на свій власний ключ API Geonames\n                            },\n                        }\n                    );\n\n                    const cities = response.data.geonames;\n                    console.log('Cities in Ukraine:', cities);\n                } catch (error) {\n                    console.error('Error fetching city data:', error);\n                }\n            };\n\n            fetchData();\n        }, []);\n\n        return(\n            <div>Check the console for city data</div>\n        );\n};};\n\nexport default TestPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEnB,MAAMC,QAAkB,GAAGA,CAAA,KAAM;IAAAF,EAAA;IAC7BL,SAAS,CAAC,MAAM;MACZ,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC1B,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC5B,oCAAoC,EACpC;YACIC,MAAM,EAAE;cACJC,CAAC,EAAE,SAAS;cACZC,OAAO,EAAE,IAAI;cACbC,OAAO,EAAE,EAAE;cAAE;cACbC,QAAQ,EAAE,WAAW,CAAE;YAC3B;UACJ,CACJ,CAAC;;UAED,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,IAAI,CAACC,QAAQ;UACrCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,MAAM,CAAC;QAC7C,CAAC,CAAC,OAAOK,KAAK,EAAE;UACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACrD;MACJ,CAAC;MAEDb,SAAS,CAAC,CAAC;IACf,CAAC,EAAE,EAAE,CAAC;IAEN,oBACIL,OAAA;MAAAmB,QAAA,EAAK;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEtD,CAAC;EAACrB,EAAA,CA7BQE,QAAkB;AA6B1B,CAAC;AAACoB,EAAA,GA/BEvB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}