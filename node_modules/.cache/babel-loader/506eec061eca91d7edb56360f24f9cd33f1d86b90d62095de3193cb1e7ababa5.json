{"ast":null,"code":"var _jsxFileName = \"/Users/oleksandrgrebinskij/Downloads/haraga/Kyrsova_Front/ProSearch-FrontEnd/src/pages/TestPage/TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityInput = () => {\n  _s();\n  // Стан для збереження введеного міста\n  const [selectedCity, setSelectedCity] = useState('');\n  // Стан для збереження списку міст\n  const [cities, setCities] = useState([]);\n\n  // Завантаження міст з JSON-файлу за допомогою useEffect\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        // Замініть 'cities.json' на шлях до вашого JSON-файлу\n        const response = await fetch('./city.json');\n        if (!response.ok) {\n          throw new Error('Помилка завантаження міст');\n        }\n        const data = await response.json();\n        setCities(data);\n      } catch (error) {\n        console.error('Помилка завантаження міст', error);\n      }\n    };\n    fetchCities();\n  }, []);\n\n  // Обробник зміни значення інпуту\n  const handleInputChange = event => {\n    setSelectedCity(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"\\u0412\\u0438\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u043C\\u0456\\u0441\\u0442\\u043E:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCity,\n      onChange: handleInputChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u043C\\u0456\\u0441\\u0442\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0412\\u0438\\u0431\\u0440\\u0430\\u043D\\u0435 \\u043C\\u0456\\u0441\\u0442\\u043E: \", selectedCity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(CityInput, \"VaaspwOF0aDCLwWO+ungyt4Mgcg=\");\n_c = CityInput;\nexport default CityInput;\nvar _c;\n$RefreshReg$(_c, \"CityInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CityInput","_s","selectedCity","setSelectedCity","cities","setCities","fetchCities","response","fetch","ok","Error","data","json","error","console","handleInputChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","city","index","_c","$RefreshReg$"],"sources":["/Users/oleksandrgrebinskij/Downloads/haraga/Kyrsova_Front/ProSearch-FrontEnd/src/pages/TestPage/TestPage.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react';\n\nconst CityInput = () => {\n    // Стан для збереження введеного міста\n    const [selectedCity, setSelectedCity] = useState('');\n    // Стан для збереження списку міст\n    const [cities, setCities] = useState<string[]>([]);\n\n    // Завантаження міст з JSON-файлу за допомогою useEffect\n    useEffect(() => {\n        const fetchCities = async () => {\n            try {\n                // Замініть 'cities.json' на шлях до вашого JSON-файлу\n                const response = await fetch('./city.json');\n                if (!response.ok) {\n                    throw new Error('Помилка завантаження міст');\n                }\n                const data = await response.json();\n                setCities(data);\n            } catch (error) {\n                console.error('Помилка завантаження міст', error);\n            }\n        };\n\n        fetchCities();\n    }, []);\n\n    // Обробник зміни значення інпуту\n    const handleInputChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        setSelectedCity(event.target.value);\n    };\n\n    return (\n        <div>\n            <label>Виберіть місто:</label>\n            <select value={selectedCity} onChange={handleInputChange}>\n                <option value=\"\">Оберіть місто</option>\n                {cities.map((city, index) => (\n                    <option key={index} value={city}>\n                        {city}\n                    </option>\n                ))}\n            </select>\n            <p>Вибране місто: {selectedCity}</p>\n        </div>\n    );\n};\n\nexport default CityInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAW,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;QAC3C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,SAAS,CAACM,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDP,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,iBAAiB,GAAIC,KAAqC,IAAK;IACjEb,eAAe,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,oBACInB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAO;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9BxB,OAAA;MAAQmB,KAAK,EAAEhB,YAAa;MAACsB,QAAQ,EAAET,iBAAkB;MAAAI,QAAA,gBACrDpB,OAAA;QAAQmB,KAAK,EAAC,EAAE;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtCnB,MAAM,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpB5B,OAAA;QAAoBmB,KAAK,EAAEQ,IAAK;QAAAP,QAAA,EAC3BO;MAAI,GADIC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTxB,OAAA;MAAAoB,QAAA,GAAG,6EAAe,EAACjB,YAAY;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEd,CAAC;AAACtB,EAAA,CA5CID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}